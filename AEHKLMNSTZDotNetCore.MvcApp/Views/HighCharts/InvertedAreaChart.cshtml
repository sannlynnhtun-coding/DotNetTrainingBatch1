@model HighChartInvertedAreaResponseModel

<figure class="highcharts-figure">
    <div id="container"></div>
    <p class="highcharts-description">
        This chart demonstrates an inverted area chart with a floating legend.
        Inverted charts can often be a good choice on smaller screens, as
        most users find it easier to scroll vertically to see more data compared
        to scrolling horizontally.
    </p>
</figure>

@{
    List<double> _data1 = Model.Series[0].Data;
    List<double> _data2 = Model.Series[1].Data;
}

@section scripts{
    <script>
        Highcharts.chart('container', {
            chart: {
                type: 'area',
                inverted: true
            },
            title: {
                text: @Html.Raw(JsonConvert.SerializeObject(Model.Title)),
                align: 'left'
            },
            accessibility: {
                keyboardNavigation: {
                    seriesNavigation: {
                        mode: 'serialize'
                    }
                }
            },
            tooltip: {
                pointFormat: '• {series.name}: <b>${point.y} B</b>'
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                x: -150,
                y: 100,
                floating: true,
                borderWidth: 1,
                backgroundColor:
                    Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'
            },
            yAxis: {
                labels: {
                    format: '${text}'
                },
                title: {
                    text: @Html.Raw(JsonConvert.SerializeObject(Model.Ytitle))
                        }
            },
            plotOptions: {
                series: {
                    pointStart: @Model.Startpoint
                        },
                area: {
                    fillOpacity: 0.5
                }
            },
            series: [{
                name: "@Model.Series[0].Name",
                data: @Html.Raw(JsonConvert.SerializeObject(_data1))
                    }, {
                name: "@Model.Series[1].Name",
                data: @Html.Raw(JsonConvert.SerializeObject(_data2))
                    }]
        });
    </script>
}

@section style{
    <style>
        #container {
            height: 410px;
        }

        .highcharts-figure,
        .highcharts-data-table table {
            min-width: 320px;
            max-width: 800px;
            margin: 1em auto;
        }

        .highcharts-data-table table {
            font-family: Verdana, sans-serif;
            border-collapse: collapse;
            border: 1px solid #ebebeb;
            margin: 10px auto;
            text-align: center;
            width: 100%;
            max-width: 500px;
        }

        .highcharts-data-table caption {
            padding: 1em 0;
            font-size: 1.2em;
            color: #555;
        }

        .highcharts-data-table th {
            font-weight: 600;
            padding: 0.5em;
        }

        .highcharts-data-table td,
        .highcharts-data-table th,
        .highcharts-data-table caption {
            padding: 0.5em;
        }

        .highcharts-data-table thead tr,
        .highcharts-data-table tr:nth-child(even) {
            background: #f8f8f8;
        }

        .highcharts-data-table tr:hover {
            background: #f1f7ff;
        }

    </style>
}