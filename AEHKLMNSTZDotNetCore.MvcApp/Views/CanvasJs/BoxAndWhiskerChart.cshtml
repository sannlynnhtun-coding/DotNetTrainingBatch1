@model CanvasChartBoxAndWhiskerChartResponseModel;

<div id="chartContainer" style="height: 300px; width: 100%;"></div>
@section scripts {
	<script>
		window.onload = function () {
			
			var chart = new CanvasJS.Chart("chartContainer", {
				animationEnabled: true,
				title: {
					text: "@Model.XAxisTitle"
				},
				axisX: {
					valueFormatString: "@Model.XAxisFormatting"
				},
				axisY: {
					title: "@Model.YAxisTitle",
					includeZero: true
				},
				data: [{
					type: "boxAndWhisker",
					xValueFormatString: "DDDD",
					yValueFormatString: "#0.0 Hours",
					dataPoints: [
						{ x: new Date("@Model.Datas[0].x"), y: @Html.Raw(JsonConvert.SerializeObject(Model.Datas[0].y)) },
						{ x: new Date("@Model.Datas[1].x"), y: @Html.Raw(JsonConvert.SerializeObject(Model.Datas[1].y)) },
						{ x: new Date("@Model.Datas[2].x"), y: @Html.Raw(JsonConvert.SerializeObject(Model.Datas[2].y)) },
						{ x: new Date("@Model.Datas[3].x"), y: @Html.Raw(JsonConvert.SerializeObject(Model.Datas[3].y)) },
						{ x: new Date("@Model.Datas[4].x"), y: @Html.Raw(JsonConvert.SerializeObject(Model.Datas[4].y)) },
						{ x: new Date("@Model.Datas[5].x"), y: @Html.Raw(JsonConvert.SerializeObject(Model.Datas[5].y)) },
						{ x: new Date("@Model.Datas[6].x"), y: @Html.Raw(JsonConvert.SerializeObject(Model.Datas[6].y)) },
						
					]
				}]
			});
			chart.render();

		}
	</script>
}