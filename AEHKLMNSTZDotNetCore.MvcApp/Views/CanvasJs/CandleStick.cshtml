@model CanvasJsCandleStickResponseModel
<div id="chartContainer" style="height: 370px; width: 100%;"></div>

@section scripts{
	<script>
		window.onload = function () {

			var dataPoints = [];

			var chart = new CanvasJS.Chart("chartContainer", {
				animationEnabled: true,
				theme: "light2", // "light1", "light2", "dark1", "dark2"
				exportEnabled: true,
				title: {
					text: "Netflix Stock Price in 2016"
				},
				subtitles: [{
					text: "Weekly Averages"
				}],
				axisX: {
					interval: 1,
					valueFormatString: "MMM"
				},
				axisY: {
					prefix: "$",
					title: "Price"
				},
				toolTip: {
					content: "Date: {x}<br /><strong>Price:</strong><br />Open: {y[0]}, Close: {y[3]}<br />High: {y[1]}, Low: {y[2]}"
				},
				data: [{
					type: "candlestick",
					yValueFormatString: "$##0.00",
					dataPoints: dataPoints
				}]
			});

			// $.get("https://canvasjs.com/data/gallery/javascript/netflix-stock-price.csv", getDataPointsFromCSV);
			getDataPointsFromCSV();
			function getDataPointsFromCSV() {
				var csvLines = @Html.Raw(JsonConvert.SerializeObject(Model.Data))
						for (var i = 0; i < csvLines.length; i++) {
					const item = csvLines[i];
					dataPoints.push({
						x: new Date(
							parseInt(item.x.split("-")[0]),
							parseInt(item.x.split("-")[1]),
							parseInt(item.x.split("-")[2])
						),
						y: item.y
					});
				}
				console.log(dataPoints);
				chart.render();
			}

			// $.get("https://canvasjs.com/data/gallery/javascript/netflix-stock-price.csv", getDataPointsFromCSV);

			// function getDataPointsFromCSV(csv) {
			// 	var csvLines = points = [];
			// 	csvLines = csv.split(/[\r?\n|\r|\n]+/);
			// 	for (var i = 0; i < csvLines.length; i++) {
			// 		if (csvLines[i].length > 0) {
			// 			points = csvLines[i].split(",");
			// 			dataPoints.push(
			// 				@Html.Raw(JsonConvert.SerializeObject(Model.Data))
			// 			);
			// 		}
			// 	}
			// }
			chart.render();

		}
	</script>
}